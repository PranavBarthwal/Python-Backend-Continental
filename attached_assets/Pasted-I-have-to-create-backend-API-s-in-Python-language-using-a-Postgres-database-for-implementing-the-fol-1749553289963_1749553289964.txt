I have to create backend API’s in Python language using a Postgres database for implementing the following workflow. You must provide Swagger API endpoints for the same. In medical industry, there are 2 categories of applications- PHR which is for patients and HMIS which is for hospitals. These APIs will need to be available in the PHR app. The HMIS system is an external system which is usually available at hospitals. The goal is to use these PHR APIs and integrate with any HMIS system. Details about hospitals, doctors, their availability are provided by HMIS system as APIs. You should make reasonable assumptions on the APIs provided by the HMIS systems. Make sure you create a readme.md that includes the details of various HMIS apis that this PHR system assumes to exist.
The PHR app will need to support the following features.

User will open the app and click on ‘Get started’ button. This will take him to the login screen where he can use enter mobile number and get Otp or login using a) email, b) ABHA. User should enter a phone number and click on ‘Get OTP’. After this otp will come on SMS, User will enter 6 digit OTP and click on ‘Login’ button. This will implement two two api- one for login and one for very otp.
After successful login, user will be taken to the home page, where he can see his name on the top right. Scan button, notification on the top left. Patient details will be displayed. He should click the scan button. This will open the camera and a button ‘Scan your QR’. There should be option to ‘Upload from Gallery’. After scanning, user profile will appear on screen along with a button ‘share’. On clicking ‘Share’, user profile is shared with the hospital HMIS system. This is Scan and share functionality.
Next, as the profile is shared, user will get a button to ‘Book appointment’. On clicking, he will see a list of doctors under different tabs like ‘General, Critical Care, etc’. The information about doctors will be available from HMIS APIs. You should assume that HMIS provides list of doctors matching a user name(case insensitive regex search) or the specialty(case insensitive regex search). The response from HMIS API will include details of the doctor along with their availability schedule. Each listed time has a “Book appointment’ button. User will be taken to a screen which shows doctor’s education details, in-person or online appointment options and some time slots. User will select mode of appointment and time slot. When the appointment is booked successfully, then HMIS system too should receive the details of the appointment on its API. A screen showing ‘Appointment Booked’ will come with a button ‘Fill symptom Checker’. When user clicks on it, he will be shown a list of symptoms under different sections like “General’, ‘Head and Nervous’, etc. He will be taken to a menu where he needs to select the whether high fever, breathing difficulty and duration of symptoms. The questions will differ based on the symptom selected. Assume that I have the list of questions to ask based on the primary complaint in some table in postgres. Next he will have an option to fill Allergies and Family history. User can provide extra info by typing or by Audio option. Gemini API key will be used to generate transcript from an audio. User will click Continue to share the symptom checker responses. Doctor will review this information (This part is not to be implemented by my app, I will only see a message that doctor has reviewed). As doctor reviews, user will get a button to ‘Join video call’. He will be taken to a meet, preferably Google meet. As the meeting ends, the user will get an option to see the prescription in “Received Documents” under “Records”tab. The “Records” is present on the app’s home screen.
There is “Check your symptoms” button on Home page which too can be used to Book appointment. It is just that in this case, first the symptoms are identified and then the appointment is booked.. On clicking it, user will be taken to symptoms selection page, where after selecting and answering questionnaire related to the symptom, user will get a ‘Book consultation’ button. This will take him to a list of doctors. On clicking ‘Book Appointment’ of any doctor, user will be shown his profile and prompted to share this with hospital by clicking ‘Continue’ button. As profile is shared, user is shown the doctors details along with option to do ‘in-person’ or ‘online’ appointment and some timeslots. User selects time slot and clicks ‘Book Appointment’. Next, the process as in point 3 follows where extra info is provided, doctor reviews, and then Meeting is conducted and prescription is updated in User’s Records. This was symptom checker workflow.
Another way for Symptom Checker is for the patient to record in his voice his symptoms. For this he will click on “Check your Symptom’. This will take him to symptom selection screen. Here, he will have the option to attempt questionnaire or record audio of symptom. On Tap to Hold, user will start to speak, after recording this audio would be transcribed in the backend by Google gemini API and the symptom will be detected automatically. User will be directly taken to answering questions related to the symptom and what follows is the process detailed in point 4 which is from ‘Book Appointment’.
When a doctor at HMIS has completed the appointment, the HMIS system will need the ability to upload any documents such as Prescriptions, Handouts, Test Results etc to the patient via an API to be provided by the PHR app.
On the home page, user has a tab called ‘Store’. On clicking it gives two options - Order Medicines and Book lab tests. On clicking Order medicines, user will be taken to  a screen with functionality to  upload a png, jpg or pdf and click on “Upload Prescription”.
On the Home page, there will be button for “checking medical handouts”. On clicking User will see a list of educational handouts uploaded.
Under My Records tab of Records option present on Home age, User will get a AI Icon. On clicking, two options will be there Summarise All Records and Selected Records. On clicking any of the two, the summarisation will be done by using Google Gemini api. Summary will be shown to user. Under My documents, there will be a button and a functionality to upload pdf records.
On home page, there will be a “Medicine Tracker” button. On clicking user will be taken to screen showing all medications, with options to enable like “after lunch”, “before breakfast”, “after breakfast”. This is used to send in-app notifications to users, also visible under notifications option on the home screen.
On the home page, there will be button for “Book/Call Ambulance”. On clicking, user will be shown a list with a tab to contact or pre-book.
Under “Store” option on home, User can also click on “Book lab tests”. This will show him a list of his vitals, and a list with different tests to select from. On clicking “Book” button next to any test. User will also have button to view “Previous tests”. After selecting the tests, and the doctors from a dropdown menu, User clicks on Request slot. 
On home, user will see a button called “Care packages”. This will show different care packages like “Diabetes”, etc with an option to  “apply”next to each.
On home, a tab called “Mindscape” is present, This will lead user to mental health support group. A button called “Interact anonymously with a peer” will open an in-built chat called “Peer Support chat”. Here user can send and receive messages.
Ensure that you provide Swagger APIs for all APIs
Ensure that you also provide all configurations such as database etc in a config file such as .env file.
Ensure that you also provide complete DDL of every table that you will need to create in Postgres. I want the ability to use a Postgres database hosted anywhere and this DDL will allow me to create the required tables. Don’t use foreign keys in any table.
